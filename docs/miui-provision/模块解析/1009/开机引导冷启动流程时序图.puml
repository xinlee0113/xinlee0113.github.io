@startuml 开机引导冷启动流程时序图

!theme plain
skinparam backgroundColor #FFFFFF
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 60

title 开机引导冷启动流程时序图\n基于ADB抓取数据分析

participant "ADB Shell" as ADB
participant "PackageManager" as PM
participant "ActivityManager" as AM
participant "ProvisionApplication" as PA
participant "DefaultActivity" as DA
participant "AbnormalBackService" as ABS
participant "SystemServer" as SS
participant "Process" as PROC

== 1. 应用安装阶段 ==
ADB -> PM: install -r -t -d app-phone-cn-debug.apk
PM -> PM: 检查APK签名和权限
PM -> PM: 解压APK到临时目录
PM -> PM: 验证APK完整性
PM -> PM: 更新系统包信息
note right: 更新code path:\n/data/app/~~fqIiiJlXYnpdZMOrKMGlNA==/\ncom.android.provision-pbBGJgayOlF3_BD1ak3KTg==

== 2. 强制停止旧进程 ==
PM -> AM: Force stopping com.android.provision
AM -> AM: 停止所有相关进程
AM -> AM: 清理进程记录
AM -> AM: 清理bad process记录
note right: 清理进程: 1000/com.android.provision

== 3. 启用应用组件 ==
ADB -> PM: pm enable com.android.provision/.activities.DefaultActivity
PM -> PM: 设置组件启用状态
PM -> PM: 更新组件状态为enabled
note right: 组件状态: enabled\n从shell,uid=0,pid=5204

== 4. 设置设备状态 ==
ADB -> SS: settings put global device_provisioned 0
SS -> SS: 更新全局设置
SS -> SS: 设置设备为未配置状态
note right: 设备状态: 未配置\n触发引导流程

== 5. 启动Activity ==
ADB -> AM: am start -W -n com.android.provision/.activities.DefaultActivity
AM -> AM: 检查Activity是否存在
AM -> AM: 创建启动Intent
AM -> AM: 准备启动参数
note right: Intent: MAIN + HOME\n启动模式: COLD

== 6. 进程创建阶段 ==
AM -> AM: startProcess: name=com.android.provision
AM -> AM: 分配进程ID
AM -> AM: 创建ProcessRecord
AM -> AM: 设置进程优先级
note right: 进程ID: 5226\n用户ID: 1000\n优先级: top-activity

== 7. 进程启动 ==
AM -> PROC: 启动新进程
PROC -> PROC: 初始化Android Runtime
PROC -> PROC: 加载Application类
PROC -> PROC: 初始化Application
PROC -> PROC: 创建主线程
note right: 进程启动时间: ~500ms\n包含ART初始化

== 8. ProvisionApplication初始化 ==
PROC -> PA: ProvisionApplication.onCreate()
PA -> PA: registerActivityLifecycleCallbacks(LifecycleHandler.create())
PA -> PA: AutoDensityConfig.init(this)
PA -> PA: sContext = this
PA -> PA: OTHelper.initialize(this)
PA -> PA: registerBootReceiver()
note right: 注册ACTION_USER_UNLOCKED广播\n监听用户解锁事件
PA -> PA: MccHelper.getInstance().init(this)
note right: 国际版特有:\nMCC码帮助类初始化
PA -> PA: MediaPlayerPool.get().acquireDefault()
PA -> PA: Utils.setupProvisionResources(getContext())
PA -> PA: LanguagePreLoadManager.preLoadTextureView()
PA -> PA: registerActivityLifecycleCallbacks(PreLoadActivityLifeCallback.create())
PA -> PA: PreLoadManager.get().init(this)
PA -> PA: ImmersiveUtils.enableImmersion(this)
PA -> PA: preloadAnimations()
note right: 预加载12个Lottie动画文件:\nlanguage.json, location.json,\ninput_method.json, font.json等

== 9. DefaultActivity创建 ==
PROC -> DA: DefaultActivity.onCreate()
DA -> DA: 检查deviceIsProvisioned()
DA -> DA: 初始化StateMachine
DA -> DA: 启动PreLoadManager
DA -> DA: 发送PROVISION_START_BROADCAST
note right: 冷启动特有:\n完整的Activity初始化

== 10. 服务启动 ==
DA -> ABS: 启动AbnormalBackService
ABS -> ABS: 初始化异常处理服务
ABS -> ABS: 注册异常监听器
ABS -> ABS: 启动后台监控
note right: 服务启动时间: ~200ms\n包含服务绑定

== 11. 状态机初始化 ==
DA -> DA: StateMachine.init()
DA -> DA: 创建所有状态对象
DA -> DA: 设置状态转换关系
DA -> DA: 初始化状态栈
note right: 冷启动特有:\n完整的状态机初始化

== 12. PreLoadManager初始化 ==
DA -> DA: PreLoadManager.init()
DA -> DA: 预加载图片资源
DA -> DA: 预加载布局资源
DA -> DA: 预加载逻辑资源
note right: 预加载时间: ~300ms\n包含资源解析

== 13. 状态机启动 ==
DA -> DA: StateMachine.start()
DA -> DA: restoreState()
DA -> DA: 检查状态栈
DA -> DA: mCurrentState.onEnter()
note right: 当前状态: startupState\n显示启动页面

== 14. 启动页面显示 ==
DA -> DA: 显示StartupFragment
DA -> DA: 加载MIUI Logo
DA -> DA: 播放启动动画
DA -> DA: 显示品牌标识
note right: 页面显示时间: ~100ms\n包含动画播放

== 15. 系统服务绑定 ==
DA -> AM: 绑定各种系统服务
AM -> AM: 绑定PackageManager
AM -> AM: 绑定ActivityManager
AM -> AM: 绑定其他系统服务
note right: 服务绑定时间: ~200ms\n包含权限检查

== 16. 权限检查 ==
DA -> PM: 检查应用权限
PM -> PM: 验证权限状态
PM -> PM: 更新权限记录
PM -> PM: 返回权限结果
note right: 权限检查时间: ~50ms\n包含权限验证

== 17. 广播发送 ==
DA -> AM: 发送PROVISION_START_BROADCAST
AM -> AM: 分发广播
AM -> AM: 通知相关组件
AM -> AM: 更新系统状态
note right: 广播发送时间: ~30ms\n包含广播分发

== 18. 启动完成 ==
DA -> DA: 启动流程完成
DA -> DA: 设置启动状态
DA -> DA: 更新UI状态
DA -> DA: 准备用户交互
note right: 总启动时间: 834ms\nWaitTime: 835ms\nLaunchState: COLD

== 19. 性能对比 ==
note over DA: 冷启动 vs 热启动对比:\n冷启动: 834ms (COLD)\n热启动: 123ms (WARM)\n差异: 711ms (6.8倍)

== 20. 关键时间节点 ==
note over PROC: 关键时间节点:\n进程创建: ~500ms\nProvisionApplication初始化: ~200ms\nDefaultActivity创建: ~100ms\n服务启动: ~200ms\n状态机初始化: ~150ms\nPreLoadManager初始化: ~300ms\n页面显示: ~100ms\n总时间: 834ms

@enduml
